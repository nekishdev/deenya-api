// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/booking/{bookingID}/accept": {
            "get": {
                "description": "Allows a consultant to accept a booking request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Allows a consultant to accept a booking request",
                "operationId": "accept-booking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "bookingID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BookingData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/bookings/": {
            "get": {
                "description": "My bookings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "My bookings",
                "operationId": "my-bookings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BookingData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "New booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "New booking",
                "operationId": "new-booking",
                "parameters": [
                    {
                        "description": "Booking",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BookingData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookingData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/bookings/{bookingID}": {
            "get": {
                "description": "Get booking by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Get booking by ID",
                "operationId": "get-booking-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "bookingID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookingData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update booking by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Update booking by ID",
                "operationId": "update-booking-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "bookingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Booking data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BookingData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookingData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete booking by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Delete booking by ID",
                "operationId": "delete-booking-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "bookingID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "MyClients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "MyClients",
                "operationId": "my-client",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/clinics": {
            "get": {
                "description": "MyClinic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clinic"
                ],
                "summary": "MyClinic",
                "operationId": "MyClinic",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ClinicData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "NewClinic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clinic"
                ],
                "summary": "NewClinic",
                "operationId": "NewClinic",
                "parameters": [
                    {
                        "description": "Clinic data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ClinicData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ClinicData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/clinics/{clinicID}": {
            "get": {
                "description": "ListClinicConsultants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clinic"
                ],
                "summary": "ListClinicConsultants",
                "operationId": "ListClinicConsultants",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Clinic ID",
                        "name": "clinicID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "UpdateClinic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clinic"
                ],
                "summary": "UpdateClinic",
                "operationId": "UpdateClinic",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Clinic ID",
                        "name": "clinicID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Clinic data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ClinicData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ClinicData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "NewClinicRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clinic"
                ],
                "summary": "NewClinicRequest",
                "operationId": "NewClinicRequest",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Clinic ID",
                        "name": "clinicID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ClinicMemberData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "LeaveClinic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clinic"
                ],
                "summary": "LeaveClinic",
                "operationId": "LeaveClinic",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Clinic ID",
                        "name": "clinicID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/clinics/{clinicID}/{consultantID}/accept": {
            "get": {
                "description": "AcceptClinicRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clinic"
                ],
                "summary": "AcceptClinicRequest",
                "operationId": "AcceptClinicRequest",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Clinic ID",
                        "name": "clinicID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Consultant ID",
                        "name": "consultantID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/clinics/{clinicID}/{consultantID}/remove": {
            "get": {
                "description": "RemoveClinicMember",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clinic"
                ],
                "summary": "RemoveClinicMember",
                "operationId": "RemoveClinicMember",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Clinic ID",
                        "name": "clinicID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Consultant ID",
                        "name": "consultantID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/consultants": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "MyConsultants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Consultants"
                ],
                "summary": "MyConsultants",
                "operationId": "my-consultants",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/conversations": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete message object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Delete message object",
                "operationId": "message-new",
                "parameters": [
                    {
                        "description": "Message",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MessageData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/conversations/{conversationID}/{messageID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get message object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Get message object",
                "operationId": "message-get",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "messageID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update message object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Update message object",
                "operationId": "message-update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "messageID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversationID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete message object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Delete message object",
                "operationId": "message-delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "messageID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/finance/invoices": {
            "get": {
                "description": "MyInvoices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Finance"
                ],
                "summary": "MyInvoices",
                "operationId": "MyInvoices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.InvoiceData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "NewInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Finance"
                ],
                "summary": "NewInvoice",
                "operationId": "NewInvoice",
                "parameters": [
                    {
                        "description": "Invoice data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InvoiceData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.InvoiceData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/finance/{invoiceID}": {
            "get": {
                "description": "GetInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Finance"
                ],
                "summary": "GetInvoice",
                "operationId": "GetInvoice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Invoice ID",
                        "name": "invoiceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.InvoiceData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "UpdateInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Finance"
                ],
                "summary": "UpdateInvoice",
                "operationId": "UpdateInvoice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Invoice ID",
                        "name": "invoiceID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Invoice data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InvoiceData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.InvoiceData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/forum": {
            "get": {
                "description": "MyForumThreads",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forum"
                ],
                "summary": "MyForumThreads",
                "operationId": "MyForumThreads",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ForumThreadData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "NewForumThread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forum"
                ],
                "summary": "NewForumThread",
                "operationId": "NewForumThread",
                "parameters": [
                    {
                        "description": "Thread data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ForumThreadData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ForumThreadData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/forum/feed": {
            "get": {
                "description": "FeedForumThreads",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forum"
                ],
                "summary": "FeedForumThreads",
                "operationId": "FeedForumThreads",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ForumThreadData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/forum/{threadID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get forum thread object by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forum"
                ],
                "summary": "Get forum thread object by ID",
                "operationId": "forum-thread-get",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Forum Thread ID",
                        "name": "threadID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ForumThreadData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update forum thread object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forum"
                ],
                "summary": "Update forum thread object",
                "operationId": "forum-thread-update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Forum Thread ID",
                        "name": "threadID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Forum Thread",
                        "name": "forum-thread",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ForumThreadData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ForumThreadData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "NewForumPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forum"
                ],
                "summary": "NewForumPost",
                "operationId": "NewForumPost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Thread id",
                        "name": "threadID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Forum Post data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ForumPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ForumPostData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeleteForumThread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forum"
                ],
                "summary": "DeleteForumThread",
                "operationId": "DeleteForumThread",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Thread id",
                        "name": "threadID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/forum/{threadID}/posts": {
            "get": {
                "description": "ForumThreadPosts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forum"
                ],
                "summary": "ForumThreadPosts",
                "operationId": "ForumThreadPosts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Thread id",
                        "name": "threadID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ForumPostData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/forum/{threadID}/{postID}": {
            "get": {
                "description": "GetForumPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forum"
                ],
                "summary": "GetForumPost",
                "operationId": "GetForumPost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Thread id",
                        "name": "threadID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Post id",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ForumPostData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "UpdateForumPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forum"
                ],
                "summary": "UpdateForumPost",
                "operationId": "UpdateForumPost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Thread id",
                        "name": "threadID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Post id",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Post data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ForumPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ForumPostData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeleteForumPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forum"
                ],
                "summary": "DeleteForumPost",
                "operationId": "DeleteForumPost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Thread id",
                        "name": "threadID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Post id",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "operationId": "login-register",
                "parameters": [
                    {
                        "description": "Login data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.JwtToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/media": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "My media list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "My media",
                "operationId": "my-media",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MediaData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "NewMedia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "NewMedia",
                "operationId": "new-media",
                "parameters": [
                    {
                        "description": "Media Object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MediaData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MediaData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/media/{mediaID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetMedia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "GetMedia",
                "operationId": "get-media-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Media ID",
                        "name": "mediaID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MediaData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "UpdateMedia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "UpdateMedia",
                "operationId": "update-media-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Media ID",
                        "name": "mediaID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Media Object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MediaData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MediaData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "DeleteMedia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "DeleteMedia",
                "operationId": "delete-media-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Media ID",
                        "name": "mediaID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/orders/{orderID}": {
            "get": {
                "description": "Get order object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get order object",
                "operationId": "order-get",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OrderData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Update order object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update order object",
                "operationId": "new-order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update order",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrderData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OrderData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "description": "Get a user's own post objects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Get a user's own post objects",
                "operationId": "my-posts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PostData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new post object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Create a new post object",
                "operationId": "post-new",
                "parameters": [
                    {
                        "description": "Post data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PostData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/posts/{postID}": {
            "put": {
                "description": "Update a post object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Update a post object",
                "operationId": "post-update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Post data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PostData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeletePost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "DeletePost",
                "operationId": "DeletePost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "MyProducts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "MyProducts",
                "operationId": "my-products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProductData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "NewProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "NewProduct",
                "operationId": "new-product",
                "parameters": [
                    {
                        "description": "Product Object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProductData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/products/models/search": {
            "get": {
                "description": "SearchProductModels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "SearchProductModels",
                "operationId": "search-product-models",
                "parameters": [
                    {
                        "description": "Query",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductModelSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProductModelData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/products/models/suggest": {
            "get": {
                "description": "SuggestProductModels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "SuggestProductModels",
                "operationId": "suggest-product-models",
                "parameters": [
                    {
                        "description": "Query",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductModelSuggestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProductModelData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/products/{productID}": {
            "get": {
                "description": "GetProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "GetProduct",
                "operationId": "get-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "productID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProductData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "UpdateProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "UpdateProduct",
                "operationId": "update-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "productID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product Object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProductData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "DeleteProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "DeleteProduct",
                "operationId": "delete-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "productID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/questionnaires/{questionnaireID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get questionnaire object by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get questionnaire object by ID",
                "operationId": "questionnaire-get",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Questionnaire ID",
                        "name": "questionnaireID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QuestionnaireData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete questionnaire object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete questionnaire object",
                "operationId": "questionnaire-delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Questionnaire ID",
                        "name": "questionnaireID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update question object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update question object",
                "operationId": "question-update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Questionnaire ID",
                        "name": "questionnaireID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Question Object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.QuestionData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QuestionData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/questionnaires/{questionnaireID}/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new question object for a questionnaire",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create new question object for a questionnaire",
                "operationId": "question-new",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Questionnaire ID",
                        "name": "questionnaireID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Question Object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.QuestionData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QuestionData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/questionnaires/{questionnaireID}/{questionID}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a question object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete a question object",
                "operationId": "question-delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Questionnaire ID",
                        "name": "questionnaireID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Question ID",
                        "name": "questionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "operationId": "auth-register",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/treatments/": {
            "get": {
                "description": "My treatments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Treatment"
                ],
                "summary": "My treatments",
                "operationId": "my-treatments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TreatmentData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/treatments/{treatmentID}": {
            "get": {
                "description": "Get treatment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Treatment"
                ],
                "summary": "Get treatment by ID",
                "operationId": "get-treatment-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Treatment ID",
                        "name": "treatmentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TreatmentData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Treatment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Treatment"
                ],
                "summary": "Update Treatment by ID",
                "operationId": "update-treatment-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Treatment ID",
                        "name": "treatmentID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Treatment data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TreatmentData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TreatmentData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Treatment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Treatment"
                ],
                "summary": "Delete Treatment by ID",
                "operationId": "delete-treatment-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Treatment ID",
                        "name": "treatmentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{userID}": {
            "get": {
                "description": "Get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "operationId": "get-user-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user by ID",
                "operationId": "update-user-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user by ID",
                "operationId": "delete-user-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResultMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{userID}/available": {
            "get": {
                "description": "AvailableBookings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "AvailableBookings",
                "operationId": "available-bookings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{userID}/me": {
            "get": {
                "description": "My account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "My account",
                "operationId": "get-my-account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{userID}/portfolios": {
            "get": {
                "description": "Get user portfolios by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Portfolio"
                ],
                "summary": "Get user portfolios by user ID",
                "operationId": "user-portfolios",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PortfolioData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{userID}/posts": {
            "get": {
                "description": "Get user post objects by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user post objects by user ID",
                "operationId": "user-posts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PostData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{userID}/products": {
            "get": {
                "description": "Get user products by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user products by user ID",
                "operationId": "get-user-products-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProductData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{userID}/public": {
            "get": {
                "description": "Get user public by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user public by user ID",
                "operationId": "get-user-public-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{userID}/threads": {
            "get": {
                "description": "Get user threads by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user threads by user ID",
                "operationId": "get-user-threads-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ForumThreadData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/{bookingID}/questionnaire": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new questionnaire object for a booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a new questionnaire object for a booking",
                "operationId": "questionnaire-new",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "bookingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Questionnaire Object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.QuestionnaireData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QuestionnaireData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.JwtToken": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.BookingData": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer",
                    "example": 43
                },
                "consultant_id": {
                    "type": "integer"
                },
                "conversation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "elapsed": {
                    "type": "integer"
                },
                "ended_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "inquiry": {
                    "description": "FollowUpID   *int64     ` + "`" + `db:\"follow_up_id\"` + "`" + `",
                    "type": "string"
                },
                "invoice_id": {
                    "description": "need to check if invoice is null on frontend?",
                    "type": "integer"
                },
                "is_accepted": {
                    "type": "boolean"
                },
                "is_remote": {
                    "type": "boolean"
                },
                "questionnaire_id": {
                    "type": "integer"
                },
                "scheduled_at": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "treatment_id": {
                    "type": "integer"
                }
            }
        },
        "models.ClinicData": {
            "type": "object",
            "properties": {
                "admin_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "lat": {
                    "description": "places ID",
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "postcode": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "models.ClinicMemberData": {
            "type": "object",
            "properties": {
                "clinic_id": {
                    "type": "integer"
                },
                "consultant_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "is_accepted": {
                    "description": "request or member",
                    "type": "boolean"
                }
            }
        },
        "models.ConversationData": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "LatestMessageID *int64   ` + "`" + `db:\"latest_message_id\" json:\"latest_message_id,omitempty\"` + "`" + `\nConsultantID *int64 ` + "`" + `db:\"consultant_id\" json:\"consultant_id,omitempty\"` + "`" + `\nClientID     *int64 ` + "`" + `db:\"client_id\" json:\"client_id,omitempty\"` + "`" + `\nUpdatedAt",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "participant_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.ForumPostData": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "media_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "owner_id": {
                    "type": "integer"
                },
                "points": {
                    "type": "integer"
                },
                "thread_id": {
                    "type": "integer"
                }
            }
        },
        "models.ForumThreadData": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "main_post_id": {
                    "type": "integer"
                },
                "owner_id": {
                    "type": "integer"
                },
                "tags.omitempty": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.InvoiceData": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "consultant_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "is_booking": {
                    "type": "boolean"
                },
                "is_order": {
                    "type": "boolean"
                },
                "is_paid": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.JsonResultMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.LoginData": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.MediaData": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "owner_id": {
                    "type": "integer"
                },
                "src": {
                    "type": "string"
                }
            }
        },
        "models.MessageData": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "conversation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "media_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "owner_id": {
                    "type": "integer"
                },
                "read_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "models.OrderData": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "consultant_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "discount": {
                    "description": "InvoiceID *int64     ` + "`" + `db:\"invoice_id\" json:\"invoice_id,omitempty\"` + "`" + ` //create invoice on order creation",
                    "type": "integer"
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "status": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.PortfolioData": {
            "type": "object",
            "properties": {
                "after_id": {
                    "type": "integer"
                },
                "before_id": {
                    "type": "integer"
                },
                "caption": {
                    "type": "string"
                },
                "client_id": {
                    "type": "integer"
                },
                "consulant_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "is_published": {
                    "type": "boolean"
                },
                "likes": {
                    "type": "integer"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "models.PostData": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "render in html - media src embedded",
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "excerpt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "is_published": {
                    "type": "boolean"
                },
                "likes": {
                    "description": "instead of likes",
                    "type": "integer"
                },
                "owner_id": {
                    "type": "integer"
                },
                "scheduled_at": {
                    "type": "string"
                },
                "tags": {
                    "description": "instead of tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "models.ProductData": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "is_available": {
                    "description": "IsFeatured  *bool      ` + "`" + `json:\"is_featured,omitempty\" db:\"is_featured\"` + "`" + `\nIsPublished *bool      ` + "`" + `json:\"is_published,omitempty\" db:\"is_published\"` + "`" + `",
                    "type": "boolean"
                },
                "owner_id": {
                    "type": "integer"
                },
                "price": {
                    "description": "MediaIDs []*int64 ` + "`" + `json:\"media_ids,omitempty\" db:\"media_ids\"` + "`" + `\nGroupIDs []*int64 ` + "`" + `json:\"group_id,omitempty\" db:\"group_ids\"` + "`" + ` //availability\nLocationID *int64   ` + "`" + `json:\"location_id,omitempty\" db:\"location_id\"` + "`" + `\nName   *string ` + "`" + `json:\"name,omitempty\" db:\"name\"` + "`" + `",
                    "type": "integer"
                },
                "product_model_id": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "models.ProductModelData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "media_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "tags": {
                    "description": "or just tags []string?",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ProductModelSearchRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ProductModelSuggestRequest": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.QuestionData": {
            "type": "object",
            "properties": {
                "answer": {
                    "description": "array in case of checklist, multiple answers. Or just use a delimiter such as comma and process string depending on type?",
                    "type": "string"
                },
                "answered_at": {
                    "type": "string"
                },
                "asked_at": {
                    "type": "string"
                },
                "choices": {
                    "description": "nullable",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "owner_id": {
                    "type": "integer"
                },
                "question": {
                    "description": "array or delimiter",
                    "type": "string"
                },
                "questionnaire_id": {
                    "description": "ID of questionnaire it belongs to",
                    "type": "integer"
                },
                "type": {
                    "description": "multi, single, small_text, large_text",
                    "type": "string"
                }
            }
        },
        "models.QuestionnaireData": {
            "type": "object",
            "properties": {
                "booking_id": {
                    "type": "integer"
                },
                "client_id": {
                    "type": "integer"
                },
                "consultant_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "models.TreatmentData": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "consultant_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "integer",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "notes": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "portfolio_id": {
                    "type": "integer"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.UserData": {
            "type": "object",
            "properties": {
                "available_from": {
                    "type": "integer"
                },
                "available_to": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "clinic_id": {
                    "type": "integer"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "readOnly": true
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "readOnly": true
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "profile_picture_id": {
                    "type": "integer"
                },
                "stripe_account_id": {
                    "type": "string"
                },
                "tags": {
                    "description": "for identifying user skin types etc for matching with correct products and questionnaires etc",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "description": "or store in user consultant",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:3333",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "AvaMed API",
	Description: "This is a REST API for AvaMed",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
